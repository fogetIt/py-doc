协程
====
    - 同时开启多个任务，但一次只顺序执行一个
    - 等到所执行的任务遭遇阻塞，就切换到下一个任务继续执行，以期节省下阻塞所占用的时间
    - 协程的调度对于内核来说是不可见的（有程序语言控制）
    - 协程间是协同调度的，这使得并发量在上万的时候，协程的性能远高于线程


stackless
----------
    - Python 的微线程（tasklet）扩展
    - 低开销（切换开销远远小于系统线程）、轻量
    - 并发性能比其他方案快上几十倍
    - channel 机制，实现简单


greenlet
--------
性能仅次于 stackless （大致慢一倍）