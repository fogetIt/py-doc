
##### 协程
- 优点；
    + 可读性更好（相对于IO多路复用）；
        * 调用的服务接口或者IO接口是异步的，但是代码是流畅（顺序）的，并没有被异步和回调打乱；
        * 协程也是异步的，但是它会把异步的事件和回调封装起来，形成类似远程调用接口；
    + 可以通过控制函数调用的层次来进一步降低协程耗费资源的大小；
    + 高并发+高扩展性+低成本
- 缺点；
    + python协程和线程一样，`无法利用多核优势`；
    + 需要自己来做调度，代码比较复杂；
    + 进行阻塞（Blocking）操作（如IO时）会阻塞掉整个程序；

##### 僵尸进程————进程结束，线程没结束
- 线程不能自己释放空间，导致：
    + 内存无法释放，卡慢；
    + 新的进程无法开始；

##### I/O多路复用（epoll， poll, select）————解决并发的一个方案
- 优点
    + 在一个进程内部处理多个逻辑流程，不用进行进程切换，性能较高；
    + 流程间共享信息简单；
- 缺点
    + 无法利用多核优势；
    + 程序流程被事件处理切割成一个个小块，散落在多个地方；
        * 代码复杂度非常高；
        * 对开发和维护非常不利；


- setDaemon(True)——将线程声明为守护线程
    - 必须在start() 方法调用之前设置
    - 设为False，守护线程程序会被无限挂起
- start()，开始线程活动
- join()，在子线程完成运行之前，其父线程将一直被阻塞
    - 不能与start()在同一循环体内