计算机数据存储
###########
    - 计算机只能表示数字
    - 如果要表示其它类型（文本、图像、声音...）的数据，就必须找到将数据转换成数字的方法


字符编码表
########
    - 数字和字符之间的映射关系
    - 每个字符都有对应的编号
    - 通过这种关系就可以将字符解释成一组数字，然后像处理数字一样处理字符


字节
----

:bytes:
    - 从网络或磁盘上读取的字节流数据
    - ``1bytes == 8bit``
    - **8** 个可以开合的晶体管，表示 **2** 的 **8** 次方
        - ``11111111 -> 0~255``
        :0~127: **ASCII**

            - 美国信息交换标准代码
            - “半角”字符
            - 占用 **1** 个字节
            :0~32, 127:  特殊用途（控制码）
            :32~126: 英语字符

                :48～57:  阿拉伯数字 **0~9**
                :65～90:  **26** 个大写英文字母
                :97～122: **26** 个小写英文字母
                - 其余为一些标点符号、运算符号等
        :128~255: 扩展字符集

            - 非英语国家字符的奇异符号（不通用）


双字节字符集
----------
    :DBCS: 汉字占用 **2** 个字节的字符集
        :GB2312: 对 **ASCII** 的中文扩展

            :“全角”字符:
                - 把 **127** 号之后的（其它国家的）奇异符号取消掉
                - **1** 个小于 **127** 的字符意义与原来相同
                - **2** 个大于 **127** 的字符连在一起时，就表示 **1** 个汉字
                - 组合出 **7000** 多个简体汉字
        :GBK:
            :CP936: **IBM** 发明 **Code Page** 时将 **GBK** 放在第 **936** 页

            - 只要第一个字节大于 **127** ，就表示 **1** 个汉字
            - 在 **GB2312** 基础上，增加了近 **20000** 个汉字（包括繁体）和符号
        :GB18030: 在 **GBK** 基础上，增加了几千个少数民族的字


unicode
-------
    :万国码、国际码、统一码、单一码: 计算机科学领域里的一项 **ISO** 标准，至今仍在不断增修

        - 废了所有的地区性编码方案（ **DBCS** 等）
        - 把地球上所有文化、字母和符号统一到一套编码里
        - 除了视觉上的字形、编码方法、标准的字符编码外，还包含了字符特性，如大小写字母
        - 必须用　**2bytes(16bit)** 来统一表示所有的字符
            + **ASCII** 字符原编码不变，将其长度由 **8** 位扩展为 **16** 位
                * 前面（高 **8** 位）补 **0**
                * 在保存英文文本时会多浪费一倍的空间
            + 无论是半角的英文字母，还是全角的汉字，都是统一的 **1** 个字符 **2** 个字节


UTF(UCS Transfer Format)
------------------------
    - **unicode** 在网络上传输的实现方式
        :UTF-8: 为传输而设计的编码

            - 使用最广
            - 每次 **8** 个位传输数据
            - 可变长编码
                - 使用 **1~6** 个字节表示一个 **unicode** 字符，根据不同的字符而变化字节长度
                    +　通过一些算法和规则来转换 **unicode** 到 **uft-8**
                        + **ASCII** 码占 **1** 个字节
                        + 一个中文字符占 **3** 个字节
                            - **unicode** 是 **2** 个字节
                        + 生僻的字符会被编码成 **4~6** 个字节
            - 兼容 **ASCII**
            - 如果要传输的文本包含大量英文字符，能节省流量和存储空间


计算机系统通用的字符编码工作方式
---------------------------
    - 在计算机内存中，统一使用 **unicode** 编码
    - 当需要保存到硬盘或者需要传输的时候，转换为 **UTF-8** 编码
    - 用记事本编辑的时候，从文件读取的 **UTF-8** 字符被转换为 **unicode** 字符到内存里
    - 编辑完成后，保存的时候再把 **unicode** 转换为 **UTF-8** 保存到文件
    - 浏览网页的时候，服务器会把动态生成的 **unicode** 内容转换为 **UTF-8** 再传输到浏览器
