内存管理，决定语言性能的重要因素
===========================
    :手工管理: C
    :垃圾回收: Java, Python


python 作为一种动态类型的语言，其对象和引用分离。
------------------------------------------


id(object) -> integer
"""""""""""""""""""""
    - 返回 **10** 进制内存地址
    :``hex(id(object)) -> string``: 返回 **16** 进制内存地址


is
""
    - 比较两个变量（变量名引用的对象）的内存地址


内存池
"""""
    - **python** 会缓存整数 (-5~256) 和短小的字符，以便重复使用


`栈溢出 <../函数/递归.rst>`_
""""""""""""""""""""""""""


gc 模块
"""""""
    - **python** 内存管理模块
    - 负责跟踪和回收垃圾
    - 管理大多数对象的 **生命周期**
