嵌套函数
-------
    - outer 必须 return inner ，才能在外部执行 inner
    :闭包 closure:
        - 由函数和与其相关的引用环境组合而成的实体
            * **inner** 引用了 **outer** 的变量（包括参数）
            * outer 的局部变量被 inner 引用，并返回 inner
            * 返回的函数并没有立刻执行，而是直到调用了才执行
            * 被引用的自由变量将和这个函数一同存在，即使已经离开了创造它的环境也不例外
            * 闭包的作用
                - 加强模块化
                - 增强抽象
                - 在闭包的基础上实现了装饰器
                    + 装饰器（decorator）————针对嵌套函数的语法糖
                        * @outer ===> inner() = outer(inner)
                        * `inner`被调用，返回值被传给`@outer`
                        * `@outer`接收`inner`，返回一个包装了inner的`替代函数`
                        * 程序的其他部分看到的将是这个`包装函数`