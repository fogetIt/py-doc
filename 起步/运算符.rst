运算符（优先级从高到低）
====================

:算术运算符_:
    :``**``:
    :``~, +, -``: 按位翻转、一元加号、一元减号（ ``~`` 是位运算符）
    :``*, /, %, //``:
    :``+, -``:
:位运算符:
    :``>>, <<``: 左移位、右移位
    :``&``:      按位与
    :``|, ^``:   按位或、按位异或
:关系（比较）运算符:
    :``<, <=, >, >=``:
    :``!=(<>), ==``:
:赋值运算符: ``=, +=, -=, *=, /=, %=, **=, //=``
:身份运算符: ``is, is not``
:成员运算符: ``in, not in``
:逻辑运算符:
    :优先级: ``not > and > or``

        .. code-block:: python

            print(not True and False)      #: True  #: not > and
            print(False and True or True)  #: True  #: and > or


算术运算符
---------
- 所有的数据类型必须同类才能进行运算
- 字符串、元组、列表能与数字相乘、相除
- 字符串、元组、列表、字典不能进行相减运算
- 集合之间不能相加
- 字典之间不能相加


比较
----
=======================  =============
值比较                      内存地址比较
=======================  =============
``x == y -> bool``         ``id(a) == id(b)``
``cmp(x, y) -> 1/0/-1``    ``a is b``
=======================  =============


其它运算符
---------

:``lambda``:
:``x.attribute``:  属性参考
:``x[i]``:         下标
:``x[i\: j]``:     寻址段
:``f(args...)``:   函数调用
:``(exp, ...)``:   绑定或元组显示
:``[exp, ...]``:   列表显示
:``{k\: v, ...}``: 字典显示
:``'exp, ...'``:   字符串转换
